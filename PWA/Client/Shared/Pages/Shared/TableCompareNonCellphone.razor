@using Bell.Reconciliation.Common.Models
@using Bell.Reconciliation.Frontend.Shared.ServiceInterfaces;
@inject ISyncData SyncData
@inject ILocalDbRepository Localdb


NON CELLPHONE
<div class="rz-text-align-left">
    <RadzenButton Text="Save Changes" ButtonStyle="ButtonStyle.Primary" />
</div>
<RadzenTabs  RenderMode="Radzen.TabRenderMode.Client" @bind-SelectedIndex=@selectedIndex>
    <Tabs>
        <RadzenTabsItem Text="Only in Staples">
            <RadzenDataGrid ColumnWidth="150px" AllowFiltering="true" AllowPaging="true" PageSize="8" AllowSorting="true" Data="@StaplesSources" TItem="StaplesSourceDto">
                <Columns>
                   <RadzenDataGridColumn TItem="StaplesSourceDto" Property="OrderNumber" Title="OrderNumber" />
                    <RadzenDataGridColumn TItem="StaplesSourceDto" Property="Amount" Title="Amount" />
                    <RadzenDataGridColumn TItem="StaplesSourceDto" Property="Comment" Title="Comment" />
                    <RadzenDataGridColumn TItem="StaplesSourceDto" Property="TransactionDate" Title="TransactionDate" />
                    <RadzenDataGridColumn TItem="StaplesSourceDto" Property="CustomerName" Title="CustomerName" />
                </Columns>
            </RadzenDataGrid>
        </RadzenTabsItem>
        <RadzenTabsItem Text="In both">
         

            <RadzenDataGrid @ref="Grid" AllowRowSelectOnRowClick="@allowRowSelectOnRowClick" AllowFiltering="true" CellRender="@CellRender"
                            FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            AllowPaging="true" PageSize="10"
                            AllowSorting="true" Data="@CompareBellStaple" TItem="CompareBellStapleNonCellPhone" ColumnWidth="200px"
                            SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedProducts class="m-4">
                <Columns>
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Width="60px" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <RadzenCheckBox TriState="false" TValue="bool"
                                            Value="@(CompareBellStaple.Any(i => selectedProducts != null && selectedProducts.Contains(i)))"
                                            Change="@(args => selectedProducts = args ? CompareBellStaple.ToList() : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(selectedProducts != null && selectedProducts.Contains(data))"
                                            TValue="bool" Change=@(args => { if(!allowRowSelectOnRowClick) { Grid.SelectRow(data); }}) />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="MatchStatus" Title="Consolidate" />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="SOrderNumber" Title="S.Order" />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="SAmount" Title="S.Amount " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="SComment" Title="S.Comment " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="STransactionDate" Title="S.TransactionDate " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="SCustomerName" Title="S.CustomerName " />

                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="BOrderNumber" Title="B.Order" />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="BAmount" Title="B.Amount " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="BComment" Title="B.Comment " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="BTransactionDate" Title="B.TransactionDate " />
                    <RadzenDataGridColumn TItem="CompareBellStapleNonCellPhone" Property="BCustomerName" Title="B.CustomerName " />
                </Columns>
            </RadzenDataGrid>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Only in Bell">
            <RadzenDataGrid AllowVirtualization="true"  ColumnWidth="150px" AllowFiltering="true" AllowPaging="true" PageSize="8" AllowSorting="true"
                            Data="@BellSources" @ref="GridBS" TItem="BellSourceDto">
                <Columns>
                    <RadzenDataGridColumn TItem="BellSourceDto" Property="OrderNumber" Title="OrderNumber#" />
                    <RadzenDataGridColumn TItem="BellSourceDto" Property="Amount" Title="Amount" />
                    <RadzenDataGridColumn TItem="BellSourceDto" Property="Comment" Title="Comment" />
                    <RadzenDataGridColumn TItem="BellSourceDto" Property="TransactionDate" Title="TransactionDate" />
                    <RadzenDataGridColumn TItem="BellSourceDto" Property="CustomerName" Title="CustomerName" />
                </Columns>
            </RadzenDataGrid>
        </RadzenTabsItem>
    </Tabs>
  
</RadzenTabs>



<hr class="featurette-divider">

@code {
    int selectedIndex = 0;

    [Parameter]
    public List<BellSourceDto> BellSources { get; set; }
    [Parameter]
    public List<StaplesSourceDto> StaplesSources { get; set; }
    [Parameter]
    public List<CompareBellStapleNonCellPhone> CompareBellStaple { get; set; }
    RadzenDataGrid<CompareBellStapleNonCellPhone> Grid = new RadzenDataGrid<CompareBellStapleNonCellPhone>();
    RadzenDataGrid<BellSourceDto> GridBS = new RadzenDataGrid<BellSourceDto>();


    IList<CompareBellStapleNonCellPhone> selectedProducts;


    private bool busy;
    bool allowRowSelectOnRowClick = true;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        StateHasChanged();

    }

    void CellRender(DataGridCellRenderEventArgs<CompareBellStapleNonCellPhone> args)
    {
        if (args.Column.Property == "SAmount" || args.Column.Property == "BAmount")
        {
            args.Attributes.Add("style", $"background-color: {(args.Data.SAmount != args.Data.BAmount ? "var(--rz-warning)" : "var(--rz-base-background-color)")};");
        }

        if (args.Column.Property == "BCustomerName" || args.Column.Property == "SCustomerName")
        {
            args.Attributes.Add("style", $"background-color: {(args.Data.BCustomerName != args.Data.SCustomerName ? "var(--rz-warning)" : "var(--rz-base-background-color)")};");
        }

        if (args.Column.Property == "STransactionDate" || args.Column.Property == "BTransactionDate")
        {
            args.Attributes.Add("style", $"background-color: {(args.Data.STransactionDate != args.Data.BTransactionDate ? "var(--rz-warning)" : "var(--rz-base-background-color)")};");
        }
    }

    //private async Task FetchData()
    //{
    //    await SyncData.FetchDataFromServerDb();
    //    bellSources = await Localdb.GetBellSourceFromLocalDb();

    //}

    //private async Task LoadFromLocalDB()
    //{
    //    bellSources = await Localdb.GetBellSourceFromLocalDb();
    //    staplesSources = await Localdb.GetStapleSourceFromLocalDb(); 
    //}

    

}
